syntax = "proto3";
package symphony.stablestaking.v1beta1;

option go_package = "github.com/osmosis-labs/osmosis/v27/x/stablestaking/types";

import "cosmos/base/v1beta1/coin.proto";
import "cosmos/tx/v1beta1/tx.proto";
import "google/protobuf/any.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/msg/v1/msg.proto";

service Msg {
  rpc StakeTokens(MsgStakeTokens) returns (MsgStakeTokensResponse) {
    option (google.api.http) = {
      post: "/symphony/stablestaking/v1beta1/stake_tokens"
      body: "*"
    };

  };

  rpc UnstakeTokens(MsgUnstakeTokens) returns (MsgUnstakeTokensResponse){
    option (google.api.http) = {
      post: "/symphony/stablestaking/v1beta1/unstake_tokens"
      body: "*"
    };
  };
}

message MsgStakeTokens {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;
  option (cosmos.msg.v1.signer) = "staker";

  string staker = 1 [
    (gogoproto.moretags) = "yaml:\"staker\"",
    (cosmos_proto.scalar) = "cosmos.AddressString"
  ];
  cosmos.base.v1beta1.Coin amount = 2 [
    (gogoproto.moretags) = "yaml:\"amount\"",
    (gogoproto.nullable) = false
  ];
}

message MsgStakeTokensResponse {
  string staker = 1 [
    (gogoproto.moretags) = "yaml:\"staker\"",
    (cosmos_proto.scalar) = "cosmos.AddressString"
  ];
  cosmos.base.v1beta1.Coin amount = 2;
  bytes total_staked = 3 [
    (gogoproto.moretags) = "yaml:\"total_staked\"",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false
  ];

  bytes total_shares = 4 [
    (gogoproto.moretags) = "yaml:\"total_shares\"",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false
  ];
}

message MsgUnstakeTokens {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;
  option (cosmos.msg.v1.signer) = "staker";

  string staker = 1 [
    (gogoproto.moretags) = "yaml:\"staker\"",
    (cosmos_proto.scalar) = "cosmos.AddressString"
  ];
  cosmos.base.v1beta1.Coin amount = 2 [
    (gogoproto.moretags) = "yaml:\"amount\"",
    (gogoproto.nullable) = false
  ];
}

message MsgUnstakeTokensResponse {
  string staker = 1 [
    (gogoproto.moretags) = "yaml:\"staker\"",
    (cosmos_proto.scalar) = "cosmos.AddressString"
  ];
  cosmos.base.v1beta1.DecCoin amount = 2 [
    (gogoproto.moretags) = "yaml:\"amount\"",
    (gogoproto.nullable) = false
  ];
  bytes total_staked = 3 [
    (gogoproto.moretags) = "yaml:\"total_staked\"",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false
  ];

  bytes total_shares = 4 [
    (gogoproto.moretags) = "yaml:\"total_shares\"",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false
  ];
}