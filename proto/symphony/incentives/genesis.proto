syntax = "proto3";
package symphony.incentives;

import "gogoproto/gogo.proto";
import "google/protobuf/duration.proto";
import "symphony/incentives/params.proto";
import "symphony/incentives/gauge.proto";
import "symphony/incentives/group.proto";

option go_package = "github.com/osmosis-labs/osmosis/v27/x/incentives/types";

// GenesisState defines the incentives module's various parameters when first
// initialized
message GenesisState {
  // params are all the parameters of the module
  Params params = 1 [ (gogoproto.nullable) = false ];
  // gauges are all gauges (not including group gauges) that should exist at
  // genesis
  repeated Gauge gauges = 2 [ (gogoproto.nullable) = false ];
  // lockable_durations are all lockup durations that gauges can be locked for
  // in order to receive incentives
  repeated google.protobuf.Duration lockable_durations = 3 [
    (gogoproto.nullable) = false,
    (gogoproto.stdduration) = true,
    (gogoproto.moretags) = "yaml:\"lockable_durations\""
  ];
  // last_gauge_id is what the gauge number will increment from when creating
  // the next gauge after genesis
  uint64 last_gauge_id = 4;
  // gauges are all group gauges that should exist at genesis
  repeated Gauge group_gauges = 5 [ (gogoproto.nullable) = false ];
  // groups are all the groups that should exist at genesis
  repeated Group groups = 6 [ (gogoproto.nullable) = false ];
}
