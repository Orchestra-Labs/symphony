syntax = "proto3";
package symphony.oracle.v1beta1;

import "gogoproto/gogo.proto";

option go_package = "github.com/osmosis-labs/osmosis/v27/x/oracle/types";

// Params defines the parameters for the oracle module.
message Params {
  option (gogoproto.equal) = true;
  option (gogoproto.goproto_stringer) = false;

  string vote_period_epoch_identifier = 1;
  string vote_threshold = 2 [
    (gogoproto.moretags) = "yaml:\"vote_threshold\"",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false
  ];
  string reward_band = 3 [
    (gogoproto.moretags) = "yaml:\"reward_band\"",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false
  ];
  uint64 reward_distribution_window = 4
      [ (gogoproto.moretags) = "yaml:\"reward_distribution_window\"" ];
  repeated Denom whitelist = 5 [
    (gogoproto.moretags) = "yaml:\"whitelist\"",
    (gogoproto.castrepeated) = "DenomList",
    (gogoproto.nullable) = false
  ];
  string slash_fraction = 6 [
    (gogoproto.moretags) = "yaml:\"slash_fraction\"",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false
  ];
  string slash_window_epoch_identifier = 7;
  string min_valid_per_window = 8 [
    (gogoproto.moretags) = "yaml:\"min_valid_per_window\"",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false
  ];
}

// Denom - the object to hold configurations of each denom
message Denom {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;
  option (gogoproto.goproto_stringer) = false;

  string name = 1 [ (gogoproto.moretags) = "yaml:\"name\"" ];
  string tobin_tax = 2 [
    (gogoproto.moretags) = "yaml:\"tobin_tax\"",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false
  ];
}

// struct for aggregate prevoting on the ExchangeRateVote.
// The purpose of aggregate prevote is to hide vote exchange rates with hash
// which is formatted as hex string in SHA256("{salt}:{exchange
// rate}{denom},...,{exchange rate}{denom}:{voter}")
message AggregateExchangeRatePrevote {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;
  option (gogoproto.goproto_stringer) = false;

  string hash = 1 [ (gogoproto.moretags) = "yaml:\"hash\"" ];
  string voter = 2 [ (gogoproto.moretags) = "yaml:\"voter\"" ];
  uint64 submit_epoch_counter = 3 [ (gogoproto.moretags) = "yaml:\"submit_epoch_counter\"" ];
}

// MsgAggregateExchangeRateVote - struct for voting on
// the exchange rates of Luna denominated in various Terra assets.
message AggregateExchangeRateVote {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;
  option (gogoproto.goproto_stringer) = false;

  repeated ExchangeRateTuple exchange_rate_tuples = 1 [
    (gogoproto.moretags) = "yaml:\"exchange_rate_tuples\"",
    (gogoproto.castrepeated) = "ExchangeRateTuples",
    (gogoproto.nullable) = false
  ];

  string voter = 2 [ (gogoproto.moretags) = "yaml:\"voter\"" ];
}

// ExchangeRateTuple - struct to store interpreted exchange rates data to store
message ExchangeRateTuple {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;
  option (gogoproto.goproto_stringer) = false;

  string denom = 1 [ (gogoproto.moretags) = "yaml:\"denom\"" ];
  string exchange_rate = 2 [
    (gogoproto.moretags) = "yaml:\"exchange_rate\"",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false
  ];
}
